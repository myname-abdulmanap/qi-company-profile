---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import CareersHeroSection from '../../components/CareersHeroSection.astro';
import { SITE_TITLE_CAREERS, SITE_DESCRIPTION_CAREERS } from '../../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import { ClientRouter } from 'astro:transitions';

const allPosts = await getCollection('blog');

const posts = allPosts
  .filter((post) => {
    const category = post.data.category;
    const status = post.data.status?.toLowerCase?.() || 'draft';

    const isCareer = Array.isArray(category)
      ? category.some((cat) => cat?.toLowerCase?.() === 'careers')
      : category?.toLowerCase?.() === 'careers';

    return isCareer && status === 'published';
  })
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<!doctype html>
<html lang="en">
  <BaseHead title={SITE_TITLE_CAREERS} description={SITE_DESCRIPTION_CAREERS} />
  <style>
    .blog-section {
      padding: 3rem 0 4rem;
      background-color: var(--bg-color);
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1rem;
    }

    .section-header {
      text-align: center;
      margin-bottom: 1.25rem;
    }

    .section-header h2 {
      font-size: 2rem;
      margin-bottom: 0.25rem;
      color: var(--heading-color);
      letter-spacing: .2px;
    }

    .section-header p {
      color: #64748b;
      font-size: 1rem;
    }

    /* Search bar */
    .search-wrap {
      display: grid;
      grid-template-columns: 1fr auto;
      gap: .75rem;
      align-items: center;
      margin: 1.5rem auto 2rem;
      max-width: 720px;
    }
    .search-input {
      width: 100%;
      padding: .85rem 1rem;
      border: 1px solid rgba(226,232,240,.9);
      border-radius: .75rem;
      outline: none;
      background: var(--bg-color);
      color: var(--text-color);
      font-size: .95rem;
    }
    .search-input:focus {
      box-shadow: 0 0 0 4px rgba(59,130,246,.12);
      border-color: rgba(59,130,246,.55);
    }
    .search-meta {
      font-size: .9rem;
      color: #64748b;
      text-align: right;
      white-space: nowrap;
    }
    .clear-btn {
      border: 1px solid rgba(226,232,240,.9);
      background: var(--bg-color);
      color: var(--text-color);
      padding: .6rem .9rem;
      border-radius: .65rem;
      cursor: pointer;
    }

    /* Grid & cards (compact) */
    .blog-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
      gap: 1.25rem;
    }

    .blog-card {
      background: var(--bg-color);
      border-radius: 12px;
      overflow: hidden;
      box-shadow: 0 4px 6px rgba(0,0,0,.05);
      transition: transform .25s ease, box-shadow .25s ease;
      border: 1px solid rgba(226,232,240,.8);
    }
    .blog-card:hover {
      transform: translateY(-3px);
      box-shadow: 0 10px 18px rgba(0,0,0,.07);
    }

    .card-link {
      text-decoration: none;
      color: inherit;
      display: block;
      height: 100%;
    }

    .card-image {
      position: relative;
      height: 160px;
      overflow: hidden;
    }
    .card-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transition: transform .3s ease;
    }
    .blog-card:hover .card-image img { transform: scale(1.04); }

    .card-content {
      padding: 1rem;
    }
    .post-date {
      color: #94a3b8;
      font-size: .8rem;
      margin-bottom: .35rem;
    }
    .card-content h3 {
      font-size: 1rem;
      margin-bottom: .5rem;
      color: var(--text-color);
      font-weight: 600;
      line-height: 1.35;
    }
    .excerpt {
      color: #64748b;
      font-size: .875rem;
      line-height: 1.5;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
      min-height: 2.6em; /* keep height uniform */
    }

    /* Tablet */
    @media (max-width: 1024px) {
      .blog-grid { gap: 1rem; }
      .card-image { height: 150px; }
    }

    /* Mobile */
    @media (max-width: 768px) {
      .section-header h2 { font-size: 1.6rem; }
      .section-header p { font-size: .95rem; }
      .card-image { height: 140px; }
      .card-content { padding: .9rem; }
      .card-content h3 { font-size: .95rem; }
      .excerpt { font-size: .85rem; -webkit-line-clamp: 2; }
    }

    .empty {
      text-align: center;
      color: #94a3b8;
      padding: 2rem 0;
      font-size: .95rem;
    }

    .fade-in { animation: fade .5s ease both; }
    @keyframes fade {
      from { opacity: 0; transform: translateY(4px); }
      to   { opacity: 1; transform: none; }
    }
  </style>

  <body>
    <ClientRouter />
    <Header />
    <CareersHeroSection />

    <main>
      <section class="blog-section">
        <div class="container">
          <div class="section-header fade-in">
            <h2>Careers at Qualita Indonesia</h2>
            <p>Discover exciting career opportunities and grow with us in the world of innovative technology.</p>
          </div>

          <!-- Search -->
          <div class="search-wrap fade-in" role="search" aria-label="Cari lowongan">
            <input
              id="careerSearch"
              class="search-input"
              type="search"
              placeholder="Ketik untuk mencari (judul, deskripsi, kategori)…"
              aria-describedby="searchMeta"
              autocomplete="off"
            />
            <button id="clearBtn" class="clear-btn" type="button" aria-label="Bersihkan pencarian">Clear</button>
            <div id="searchMeta" class="search-meta" aria-live="polite"></div>
          </div>

          <!-- Grid -->
          <div id="grid" class="blog-grid">
            {
              posts.map((post) => {
                const catText =
                  post.data.category instanceof Array
                    ? post.data.category.join(' ')
                    : post.data.category ?? '';
                const searchBlob = [
                  post.data.title ?? '',
                  post.data.description ?? '',
                  catText,
                  post.id
                ].join(' ').toLowerCase();

                const hero = post.data.heroImage ?? '/images/placeholder.jpg'; // ganti sesuai asetmu
                return (
                  <article
                    class="blog-card fade-in"
                    data-search={searchBlob}
                    data-title={(post.data.title ?? '').toLowerCase()}
                  >
                    <a href={`/careers/${post.id}/`} class="card-link">
                      <div class="card-image">
                        <img
                          src={hero}
                          alt={post.data.title}
                          loading="lazy"
                          decoding="async"
                        />
                      </div>
                      <div class="card-content">
                        <p class="post-date">
                          in {post.data.category instanceof Array ? post.data.category.join(', ') : post.data.category}
                          {' '}– <FormattedDate date={post.data.pubDate} />
                        </p>
                        <h3>{post.data.title}</h3>
                        <p class="excerpt">{post.data.description}</p>
                      </div>
                    </a>
                  </article>
                );
              })
            }
          </div>

          <div id="emptyState" class="empty" hidden>Tidak ada hasil yang cocok.</div>
        </div>
      </section>
    </main>

    <Footer />

    <!-- Real-time filter (vanilla, debounced, diacritics-insensitive) -->
    <script type="module">
      const input = document.getElementById('careerSearch');
      const clearBtn = document.getElementById('clearBtn');
      const grid = document.getElementById('grid');
      const cards = Array.from(grid.querySelectorAll('.blog-card'));
      const meta = document.getElementById('searchMeta');
      const empty = document.getElementById('emptyState');

      // normalize: lowercase + remove diacritics
      const normalize = (s) =>
        (s || '')
          .toLowerCase()
          .normalize('NFD')
          .replace(/[\u0300-\u036f]/g, '');

      // simple debounce
      let t;
      const debounce = (fn, wait = 150) => (...args) => {
        clearTimeout(t);
        t = setTimeout(() => fn(...args), wait);
      };

      function updateCount(shown) {
        const total = cards.length;
        meta.textContent = shown === total
          ? `${total} posisi`
          : `${shown} dari ${total} posisi`;
      }

      function runFilter(qRaw) {
        const q = normalize(qRaw.trim());
        let shown = 0;
        if (!q) {
          cards.forEach((c) => {
            c.hidden = false;
          });
          empty.hidden = true;
          updateCount(cards.length);
          return;
        }

        cards.forEach((c) => {
          const hay = c.dataset.search || '';
          const ok = normalize(hay).includes(q);
          c.hidden = !ok;
          if (ok) shown++;
        });

        empty.hidden = shown !== 0;
        updateCount(shown);
      }

      const onInput = debounce((e) => runFilter(e.target.value));

      input.addEventListener('input', onInput);
      clearBtn.addEventListener('click', () => {
        input.value = '';
        input.focus();
        runFilter('');
      });

      // UX: tekan "/" fokus ke search
      window.addEventListener('keydown', (e) => {
        if (e.key === '/' && !/INPUT|TEXTAREA/.test(document.activeElement.tagName)) {
          e.preventDefault();
          input.focus();
        }
      });

      // init meta on load
      updateCount(cards.length);
    </script>
  </body>
</html>
