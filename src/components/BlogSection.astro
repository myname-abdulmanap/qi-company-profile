---
import { getCollection } from 'astro:content';
const allPosts = await getCollection('blog');

// Filter posts: exclude careers for regular posts
const posts = allPosts
  .filter((post) => {
    const category = post.data.category;
    if (category instanceof Array) {
      return !category.some((cat) => cat.toLowerCase() === 'careers');
    }
    return category?.toLowerCase() !== 'careers';
  })
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 6);

// Filter for careers only
const careerPosts = allPosts
  .filter((post) => {
    const category = post.data.category;
    if (category instanceof Array) {
      return category.some((cat) => cat.toLowerCase() === 'careers');
    }
    return category?.toLowerCase() === 'careers';
  })
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
  .slice(0, 6);

import FormattedDate from './../components/FormattedDate.astro';
---

<section class="blog-section">
  <div class="container-blog">
    <header class="header fade-in">
      <h2>News and Events ðŸ“°</h2>
      <p>Explore our collection of articles, news, events and insights</p>
    </header>

    <div class="grid fade-in">
      {
        posts.map((post) => (
          <article class="card">
            <a href={`/posts/${post.id}/`}>
              <div class="img-wrap">
                <img src={post.data.heroImage} alt="" loading="lazy" decoding="async" />
              </div>
              <div class="content">
                <time>
                  {' '}
                  in{' '}
                  {post.data.category instanceof Array
                    ? post.data.category.join(' , ')
                    : post.data.category}{' '}
                  - <FormattedDate date={post.data.pubDate} />{' '}
                </time>
                <h3>{post.data.title}</h3>
                <p>{post.data.description}</p>
              </div>
            </a>
          </article>
        ))
      }
    </div>
    <div class="btn-blog">
      <a href="/posts" class="btn">More Articles</a>
    </div>
  </div>
</section>

<!-- Careers Section -->
{
  careerPosts.length > 0 && (
    <section class="blog-section">
      <div class="container-blog">
        <header class="header fade-in">
          <h2>Careers ðŸ’¼</h2>
          <p>Join our team and explore exciting career opportunities</p>
        </header>

        <div class="grid fade-in">
          {careerPosts.map((post) => (
            <article class="card">
              <a href={`/careers/${post.id}/`}>
                <div class="img-wrap">
                  <img src={post.data.heroImage} alt="" loading="lazy" decoding="async" />
                </div>
                <div class="content">
                  <time>
                    {' '}
                    in{' '}
                    {post.data.category instanceof Array
                      ? post.data.category.join(' , ')
                      : post.data.category}{' '}
                    - <FormattedDate date={post.data.pubDate} />{' '}
                  </time>
                  <h3>{post.data.title}</h3>
                  <p>{post.data.description}</p>
                </div>
              </a>
            </article>
          ))}
        </div>
        <div class="btn-blog">
          <a href="/careers" class="btn">
            More Careers
          </a>
        </div>
      </div>
    </section>
  )
}

<style>
  .blog-section {
    padding: 2rem 0;
    background: var(--bg-main);
  }

  .container-blog {
    max-width: 1000px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .header {
    text-align: center;
    margin-bottom: 2rem;
  }

  .header h2 {
    font-size: 2.5rem;
    color: var(--heading-color);
    margin-bottom: 0.25rem;
  }

  .header p {
    color: #64748b;
    font-size: 0.9rem;
  }

  .grid {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    margin-bottom: 2.5rem;
  }

  .card {
    background: var(--bg-main);
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 2px 4px rgb(0 0 0 / 4%);
    transition: transform 0.2s;
    border: 1px solid rgb(226 232 240 / 80%);
  }

  .card:hover {
    transform: translateY(-2px);
  }

  .card a {
    text-decoration: none;
    color: inherit;
  }

  .img-wrap {
    height: 140px;
    overflow: hidden;
  }

  .img-wrap img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .content {
    padding: 0.75rem;
  }

  .content time {
    color: #64748b;
    font-size: 0.75rem;
  }

  .content h3 {
    margin: 0.25rem 0;
    font-size: 1.5rem;
    color: var(--text-color);
  }

  .content p {
    color: #64748b;
    font-size: 0.8rem;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    line-height: 1.4;
  }

  .btn-blog {
    text-align: center;
    align-items: center;
  }

  @media (max-width: 768px) {
    .grid {
      grid-template-columns: repeat(2, 1fr);
      gap: 0.75rem;
      margin-bottom: 2rem;
    }

    .img-wrap {
      height: 120px;
    }
  }

  @media (max-width: 480px) {
    .grid {
      grid-template-columns: 1fr;
    }

    .img-wrap {
      height: 160px;
    }

    .more-btn {
      padding: 0.6rem 1.5rem;
      font-size: 0.85rem;
    }
  }
</style>
