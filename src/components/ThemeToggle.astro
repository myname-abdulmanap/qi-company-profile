---
// ThemeToggle.astro
---

<button id="themeToggle" class="theme-toggle" aria-label="Toggle theme">
    <svg
      width="20"
      height="20"
      viewBox="0 0 20 20"
      fill="none"
      xmlns="https://www.w3.org/2000/svg"
    >
      <path
        class="sun"
        d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      />
      <path
        class="moon"
        d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
      />
    </svg>
  </button>

  <style>

.theme-toggle {
  border: none;
  background-color: var(--text-bar);
  cursor: pointer;
  padding: 5px;
  border-radius: 10px;
  transition: background-color 0.3s;
  margin-left: 10px;
  margin-right: 0;
}

/* Style untuk ikon theme (sun dan moon) */
.sun {
  fill: var(--dark);
}

.moon {
  fill: none;
}

:global([data-theme="dark"]) .sun {
  fill: none;
}

:global([data-theme="dark"]) .moon {
  fill: var(--text-color);
}


/* header.white .theme-toggle {
    background-color: var(--dark);
  } */

  </style>
<!--
  <script>
   interface ThemeToggle {
  theme: 'light' | 'dark';
  setTheme: (theme: 'light' | 'dark') => void;
  getPreferredTheme: () => 'light' | 'dark';
}

const themeToggle: ThemeToggle = {
  theme: (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme') as 'light' | 'dark';
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })(),

  setTheme(theme) {
    localStorage.setItem('theme', theme);
    document.documentElement.setAttribute('data-theme', theme);
    this.theme = theme;
  },

  getPreferredTheme() {
    return this.theme;
  },
};

const initThemeToggle = () => {
  // Set theme saat halaman pertama kali dimuat
  themeToggle.setTheme(themeToggle.getPreferredTheme());


  const themeToggleButton = document.getElementById('themeToggle');
  if (themeToggleButton) {
    themeToggleButton.removeEventListener("click", toggleTheme); // Hapus event listener lama agar tidak dobel
    themeToggleButton.addEventListener("click", toggleTheme);
  }

  function toggleTheme() {
    const isDark = document.documentElement.getAttribute('data-theme') === 'dark';
    themeToggle.setTheme(isDark ? 'light' : 'dark');
  }


  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    themeToggle.setTheme(e.matches ? 'dark' : 'light');
  });
};


document.addEventListener('DOMContentLoaded', initThemeToggle);


document.addEventListener('astro:after-swap', initThemeToggle);

  </script> -->